open Complementation
structure Automaton = struct
val automaton : (string, nat) nbaei = Nbaei (["a", "b", "c", "d"], [nat_of_integer (0 : IntInf.int)], [(nat_of_integer (0 : IntInf.int), ("a", nat_of_integer (1 : IntInf.int))), (nat_of_integer (0 : IntInf.int), ("b", nat_of_integer (2 : IntInf.int))), (nat_of_integer (0 : IntInf.int), ("c", nat_of_integer (1 : IntInf.int))), (nat_of_integer (0 : IntInf.int), ("d", nat_of_integer (2 : IntInf.int))), (nat_of_integer (2 : IntInf.int), ("a", nat_of_integer (2 : IntInf.int))), (nat_of_integer (2 : IntInf.int), ("b", nat_of_integer (2 : IntInf.int))), (nat_of_integer (2 : IntInf.int), ("c", nat_of_integer (2 : IntInf.int))), (nat_of_integer (2 : IntInf.int), ("d", nat_of_integer (2 : IntInf.int))), (nat_of_integer (1 : IntInf.int), ("a", nat_of_integer (3 : IntInf.int))), (nat_of_integer (1 : IntInf.int), ("b", nat_of_integer (3 : IntInf.int))), (nat_of_integer (1 : IntInf.int), ("c", nat_of_integer (3 : IntInf.int))), (nat_of_integer (1 : IntInf.int), ("d", nat_of_integer (3 : IntInf.int))), (nat_of_integer (3 : IntInf.int), ("c", nat_of_integer (4 : IntInf.int))), (nat_of_integer (3 : IntInf.int), ("d", nat_of_integer (4 : IntInf.int))), (nat_of_integer (3 : IntInf.int), ("a", nat_of_integer (3 : IntInf.int))), (nat_of_integer (3 : IntInf.int), ("b", nat_of_integer (3 : IntInf.int))), (nat_of_integer (4 : IntInf.int), ("c", nat_of_integer (4 : IntInf.int))), (nat_of_integer (4 : IntInf.int), ("d", nat_of_integer (4 : IntInf.int))), (nat_of_integer (4 : IntInf.int), ("a", nat_of_integer (3 : IntInf.int))), (nat_of_integer (4 : IntInf.int), ("b", nat_of_integer (3 : IntInf.int)))], [nat_of_integer (1 : IntInf.int), nat_of_integer (2 : IntInf.int), nat_of_integer (3 : IntInf.int)])
end
