%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Sebastiaan Joosten at 2018-11-23 14:50:01 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{Joosten17a,
	Abstract = {We introduce the tool Amperspiegel, which uses triple graphs for parsing, printing and manipulating data. We show how to conveniently encode parsers, graph manipulation-rules, and printers using several relations. As such, parsers, rules and printers are all encoded as graphs themselves. This allows us to parse, manipulate and print these parsers, rules and printers within the system. A parser for a context free grammar is graph-encoded with only four relations. The graph manipulation-rules turn out to be especially helpful when parsing. The printers strongly correspond to the parsers, being described using only five relations. The combination of parsers, rules and printers allows us to extract Ampersand source code from ArchiMate XML documents. Amperspiegel was originally developed to aid in the development of Ampersand.},
	Author = {Joosten, Sebastiaan Jozef Christiaan},
	Booktitle = {Relational and algebraic methods in computer science},
	Date-Added = {2018-11-23 14:42:06 +0100},
	Date-Modified = {2018-11-23 14:47:02 +0100},
	Day = {16},
	Editor = {Peter H{\"o}fner and Damien Pous and Georg Struth},
	Isbn = {978-3-319-57417-2},
	Language = {English},
	Local-Url = {RAMICS2017Parsing.pdf},
	Month = {May},
	Pages = {159--176},
	Publisher = {Springer},
	Series = {Lecture Notes in Computer Science},
	Slides = {SlidesJoosten17a.pdf},
	Title = {Parsing and Printing of and with Triples},
	Year = {2017}}

@inproceedings{Michels11,
	Abstract = {Relation algebra can be used to specify information systems and business processes. It was used in practice in two large IT projects in the Dutch government. But which are the features that make relation algebra practical? This paper discusses these features and motivates them from an information system designer's point of view. The resulting language, Ampersand, is a syntactically sugared version of relation algebra. It is a typed language, which is supported by a compiler. The design approach, also called Ampersand, uses software tools that compile Ampersand scripts into functional specifications. This makes Ampersand interesting as an application of relation algebra in the industrial practice. The purpose of this paper is to define Ampersand and motivate its features from a practical perspective. This work is part of the research programme of the Information Systems & Business Processes (IS&BP) department of the Open University.},
	Author = {Michels, Gerard and Joosten, Sebastiaan Jozef Christiaan and van der Woude, Jaap and Joosten, Stef},
	Booktitle = {International Conference on Relational and Algebraic Methods in Computer Science},
	Date-Added = {2018-11-23 14:42:06 +0100},
	Date-Modified = {2018-11-23 14:42:06 +0100},
	Doi = {10.1007/978-3-642-21070-9_21},
	Editor = {{Swart, de}, H.},
	Local-Url = {RAMICS2011Ampersand.pdf},
	Month = {May},
	Organization = {Springer, Berlin, Heidelberg},
	Pages = {280--293},
	Title = {Ampersand: Applying Relation Algebra in Practice},
	Year = {2011},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-21070-9_21}}

@article{Joosten18,
	Abstract = {We give a procedure that can be used to automatically satisfy invariants of a certain shape. These invariants may be written with the operations intersection, composition and converse over binary relations, and equality over these operations. We call these invariants sentences that we interpret over graphs. For questions stated through sets of these sentences, this paper gives a semi-decision procedure we call graph saturation. It decides entailment over these sentences, inspired on graph rewriting. We prove correctness of the procedure. Moreover, we show the corresponding decision problem to be undecidable. This confirms a conjecture previously stated by the author.},
	Author = {Joosten, Sebastiaan Jozef Christiaan},
	Date-Added = {2018-11-23 10:54:12 +0100},
	Date-Modified = {2018-11-23 14:47:08 +0100},
	Doi = {10.1016/j.jlamp.2018.06.005},
	Issn = {2352-2208},
	Journal = {Journal of Logical and Algebraic Methods in Programming},
	Keywords = {cs.LO, cs.DM, cs.PL},
	Language = {English},
	Month = {11},
	Pages = {98--112},
	Publisher = {Elsevier BV},
	Title = {Finding models through graph saturation},
	Volume = {100},
	Year = {2018},
	Bdsk-Url-1 = {https://doi.org/10.1016/j.jlamp.2018.06.005}}

@article{Klein04,
	Author = {Gerwin Klein},
	Bibsource = {dblp computer science bibliography, https://dblp.org},
	Biburl = {https://dblp.org/rec/bib/journals/afp/Klein04},
	Date-Added = {2018-11-23 10:54:12 +0100},
	Date-Modified = {2018-11-23 14:50:01 +0100},
	Journal = {Archive of Formal Proofs},
	Timestamp = {Mon, 19 Sep 2016 15:58:56 +0200},
	Title = {Example Submission},
	Url = {https://www.isa-afp.org/entries/Example-Submission.shtml},
	Year = {2004},
	Bdsk-Url-1 = {https://www.isa-afp.org/entries/Example-Submission.shtml}}
