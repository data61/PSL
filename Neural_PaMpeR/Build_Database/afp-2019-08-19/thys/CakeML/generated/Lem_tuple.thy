chapter \<open>Generated by Lem from \<open>tuple.lem\<close>.\<close>

theory "Lem_tuple" 

imports
  Main
  "Lem_bool"
  "Lem_basic_classes"

begin 

 

\<comment> \<open>\<open>open import Bool Basic_classes\<close>\<close>

\<comment> \<open>\<open> ----------------------- \<close>\<close>
\<comment> \<open>\<open> fst                     \<close>\<close>
\<comment> \<open>\<open> ----------------------- \<close>\<close>

\<comment> \<open>\<open>val fst : forall 'a 'b. 'a * 'b -> 'a\<close>\<close>
\<comment> \<open>\<open>let fst (v1, v2)=  v1\<close>\<close>

\<comment> \<open>\<open> ----------------------- \<close>\<close>
\<comment> \<open>\<open> snd                     \<close>\<close>
\<comment> \<open>\<open> ----------------------- \<close>\<close>

\<comment> \<open>\<open>val snd : forall 'a 'b. 'a * 'b -> 'b\<close>\<close>
\<comment> \<open>\<open>let snd (v1, v2)=  v2\<close>\<close>


\<comment> \<open>\<open> ----------------------- \<close>\<close>
\<comment> \<open>\<open> curry                   \<close>\<close>
\<comment> \<open>\<open> ----------------------- \<close>\<close>

\<comment> \<open>\<open>val curry : forall 'a 'b 'c. ('a * 'b -> 'c) -> ('a -> 'b -> 'c)\<close>\<close>

\<comment> \<open>\<open> ----------------------- \<close>\<close>
\<comment> \<open>\<open> uncurry                 \<close>\<close>
\<comment> \<open>\<open> ----------------------- \<close>\<close>

\<comment> \<open>\<open>val uncurry : forall 'a 'b 'c. ('a -> 'b -> 'c) -> ('a * 'b -> 'c)\<close>\<close>


\<comment> \<open>\<open> ----------------------- \<close>\<close>
\<comment> \<open>\<open> swap                    \<close>\<close>
\<comment> \<open>\<open> ----------------------- \<close>\<close>

\<comment> \<open>\<open>val swap : forall 'a 'b. ('a * 'b) -> ('b * 'a)\<close>\<close> 
\<comment> \<open>\<open>let swap (v1, v2)=  (v2, v1)\<close>\<close>

end
